从 time 导入 sleep 作为 睡觉
从 time 导入 time 作为 时间

# 完整的装饰器测试

# 多个装饰器
@属性
@类方法
定义 多装饰器函数(cls):
    返回 "多个装饰器"

# 装饰类 
@属性
类 装饰类:
    定义 魔法初始化(自己):
        自己.名字 赋值为 "测试"

# 普通类中的装饰方法
类 人:
    定义 魔法初始化(自己, 名字):
        自己.名字 赋值为 名字
    
    @属性
    定义 介绍(自己):
        返回 f"我是{自己.名字}"
    
    @静态方法
    定义 问候():
        返回 "大家好！"
    
    @类方法
    定义 创建默认(cls):
        返回 cls("默认人")

# 测试调用
张三 = 人("张三")
打印(张三.介绍)
打印(人.问候())

默认人 = 人.创建默认()
打印(默认人.介绍)


# 测试自定义装饰器
定义 计算时间(函数):
  定义 内部函数(*参数, **键值对参数):
    开始 赋值为 时间()
    结果 赋值为 函数(*参数, **键值对参数)
    结束 赋值为 时间()
    打印("总消耗时间:", 函数.魔法名称, 结束 减 开始)
    返回 结果
    
  返回 内部函数 

@计算时间
定义 测试函数():
    迭代 数字 在 范围（一，十）：
        打印("运行中...", 数字)
        睡觉(0.1)

# 调用测试函数
测试函数()